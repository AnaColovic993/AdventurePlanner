// <auto-generated />
using System;
using Adventure.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Adventure.Repository.Migrations
{
    [DbContext(typeof(AdventureDbContext))]
    [Migration("20180911205407_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Adventure.Repository.Models.AdventureDetail", b =>
                {
                    b.Property<int>("AdventureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdventureName")
                        .IsRequired();

                    b.Property<int?>("AdventureTypeId");

                    b.Property<string>("Description");

                    b.Property<double>("PricePerDay");

                    b.HasKey("AdventureId");

                    b.HasIndex("AdventureTypeId");

                    b.ToTable("AdventureDetails");
                });

            modelBuilder.Entity("Adventure.Repository.Models.AdventureType", b =>
                {
                    b.Property<int>("AdventureTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdventureTypeName")
                        .IsRequired();

                    b.HasKey("AdventureTypeId");

                    b.ToTable("AdventureTypes");
                });

            modelBuilder.Entity("Adventure.Repository.Models.AdventureDetail", b =>
                {
                    b.HasOne("Adventure.Repository.Models.AdventureType", "AdventureType")
                        .WithMany("Adventures")
                        .HasForeignKey("AdventureTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
